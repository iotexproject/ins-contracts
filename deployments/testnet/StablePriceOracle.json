{
  "address": "0xb3720d3F773fFe5adaFD1152eDE645fbA6e0ed86",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AggregatorInterface",
          "name": "_usdOracle",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_rentPrices",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "prices",
          "type": "uint256[]"
        }
      ],
      "name": "RentPriceChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "expires",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "premium",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "expires",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "base",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "premium",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPriceOracle.Price",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price1Letter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price2Letter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price3Letter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price4Letter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price5Letter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice1Letter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice2Letter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice3Letter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice4Letter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice5Letter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdOracle",
      "outputs": [
        {
          "internalType": "contract AggregatorInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6367f3f4063c1786bf2c93258849378cc56a47b6a52df4bd559362acbff9137c",
  "receipt": {
    "to": null,
    "from": "0x7c029553644F5E9442cb576c1056e0f7663Db1Fa",
    "contractAddress": "0xb3720d3F773fFe5adaFD1152eDE645fbA6e0ed86",
    "transactionIndex": 0,
    "gasUsed": "1003697",
    "logsBloom": "0x
    "blockHash": "0x6498e9ea431b1e3a40f1b47cb21a8d9151b5dea8f61f05962dbfb6ecd4a97dbf",
    "transactionHash": "0x6367f3f4063c1786bf2c93258849378cc56a47b6a52df4bd559362acbff9137c",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 20674655,
        "transactionHash": "0x6367f3f4063c1786bf2c93258849378cc56a47b6a52df4bd559362acbff9137c",
        "address": "0xb3720d3F773fFe5adaFD1152eDE645fbA6e0ed86",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007c029553644f5e9442cb576c1056e0f7663db1fa"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x6498e9ea431b1e3a40f1b47cb21a8d9151b5dea8f61f05962dbfb6ecd4a97dbf"
      }
    ],
    "blockNumber": 20674655,
    "cumulativeGasUsed": "1003697",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4E23483d8776Fa346a6bC91e2c5cF74742C56daA",
    [
      0,
      0,
      "634195839",
      "634195839",
      "634195839"
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "82922f0b2b43178df9d4f2197cee4d51",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AggregatorInterface\",\"name\":\"_usdOracle\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_rentPrices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"}],\"name\":\"RentPriceChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"premium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"expires\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"base\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"}],\"internalType\":\"struct IPriceOracle.Price\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1Letter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price2Letter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price3Letter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price4Letter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price5Letter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice1Letter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice2Letter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice3Letter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice4Letter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice5Letter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdOracle\",\"outputs\":[{\"internalType\":\"contract AggregatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"premium(string,uint256,uint256)\":{\"details\":\"Returns the pricing premium in wei.\"},\"price(string,uint256,uint256)\":{\"details\":\"Returns the price to register or renew a name.\",\"params\":{\"duration\":\"How long the name is being registered or extended for, in seconds.\",\"expires\":\"When the name presently expires (0 if this is a new registration).\",\"name\":\"The name being registered or renewed.\"},\"returns\":{\"_0\":\"base premium tuple of base price + premium price\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/iotxregistrar/StablePriceOracle.sol\":\"StablePriceOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"src/iotxregistrar/IPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.17 <0.9.0;\\n\\ninterface IPriceOracle {\\n    struct Price {\\n        uint256 base;\\n        uint256 premium;\\n    }\\n\\n    /**\\n     * @dev Returns the price to register or renew a name.\\n     * @param name The name being registered or renewed.\\n     * @param expires When the name presently expires (0 if this is a new registration).\\n     * @param duration How long the name is being registered or extended for, in seconds.\\n     * @return base premium tuple of base price + premium price\\n     */\\n    function price(string calldata name, uint256 expires, uint256 duration) external view returns (Price calldata);\\n}\\n\",\"keccak256\":\"0x375359bc134b9e40c81ed6f51440cbc5c2a2e3ec53706957d7d6c002a8be10f7\",\"license\":\"MIT\"},\"src/iotxregistrar/StablePriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ~0.8.17;\\n\\nimport \\\"./IPriceOracle.sol\\\";\\nimport \\\"./StringUtils.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\n\\ninterface AggregatorInterface {\\n    function latestAnswer() external view returns (int256);\\n}\\n\\ninterface ShadowAggregatorInterface {\\n    function latestRoundData()\\n        external\\n        view\\n        returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\\ncontract AggregatorProxy is AggregatorInterface {\\n    ShadowAggregatorInterface private old;\\n\\n    constructor(address _old) {\\n        old = ShadowAggregatorInterface(_old);\\n    }\\n\\n    function latestAnswer() external view override returns (int256) {\\n        (, int256 answer, , , ) = old.latestRoundData();\\n        return answer;\\n    }\\n}\\n\\n// StablePriceOracle sets a price in USD, based on an oracle.\\ncontract StablePriceOracle is IPriceOracle, Ownable {\\n    using StringUtils for *;\\n\\n    // Rent in base price units by length\\n    uint256 public price1Letter;\\n    uint256 public price2Letter;\\n    uint256 public price3Letter;\\n    uint256 public price4Letter;\\n    uint256 public price5Letter;\\n\\n    // Oracle address\\n    AggregatorInterface public immutable usdOracle;\\n\\n    event RentPriceChanged(uint256[] prices);\\n\\n    constructor(AggregatorInterface _usdOracle, uint256[] memory _rentPrices) {\\n        usdOracle = _usdOracle;\\n        price1Letter = _rentPrices[0];\\n        price2Letter = _rentPrices[1];\\n        price3Letter = _rentPrices[2];\\n        price4Letter = _rentPrices[3];\\n        price5Letter = _rentPrices[4];\\n    }\\n\\n    function setPrice1Letter(uint256 _price) external onlyOwner {\\n        price1Letter = _price;\\n    }\\n\\n    function setPrice2Letter(uint256 _price) external onlyOwner {\\n        price2Letter = _price;\\n    }\\n\\n    function setPrice3Letter(uint256 _price) external onlyOwner {\\n        price3Letter = _price;\\n    }\\n\\n    function setPrice4Letter(uint256 _price) external onlyOwner {\\n        price4Letter = _price;\\n    }\\n\\n    function setPrice5Letter(uint256 _price) external onlyOwner {\\n        price5Letter = _price;\\n    }\\n\\n    function price(\\n        string calldata name,\\n        uint256 expires,\\n        uint256 duration\\n    ) external view override returns (IPriceOracle.Price memory) {\\n        uint256 len = name.strlen();\\n        uint256 basePrice;\\n\\n        if (len >= 5) {\\n            basePrice = price5Letter * duration;\\n        } else if (len == 4) {\\n            basePrice = price4Letter * duration;\\n        } else if (len == 3) {\\n            basePrice = price3Letter * duration;\\n        } else if (len == 2) {\\n            basePrice = price2Letter * duration;\\n        } else {\\n            basePrice = price1Letter * duration;\\n        }\\n\\n        return\\n            IPriceOracle.Price({\\n                base: attoUSDToWei(basePrice),\\n                premium: attoUSDToWei(_premium(name, expires, duration))\\n            });\\n    }\\n\\n    /**\\n     * @dev Returns the pricing premium in wei.\\n     */\\n    function premium(string calldata name, uint256 expires, uint256 duration) external view returns (uint256) {\\n        return attoUSDToWei(_premium(name, expires, duration));\\n    }\\n\\n    /**\\n     * @dev Returns the pricing premium in internal base units.\\n     */\\n    function _premium(string memory, uint256, uint256) internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    function attoUSDToWei(uint256 amount) internal view returns (uint256) {\\n        uint256 ethPrice = uint256(usdOracle.latestAnswer());\\n        return (amount * 1e8) / ethPrice;\\n    }\\n\\n    function weiToAttoUSD(uint256 amount) internal view returns (uint256) {\\n        uint256 ethPrice = uint256(usdOracle.latestAnswer());\\n        return (amount * ethPrice) / 1e8;\\n    }\\n\\n    function supportsInterface(bytes4 interfaceID) public view virtual returns (bool) {\\n        return interfaceID == type(IERC165).interfaceId || interfaceID == type(IPriceOracle).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x1a1b981c6352d9feb26e8fe8bccc060404f2930739275648e2243c71824b8a2e\",\"license\":\"MIT\"},\"src/iotxregistrar/StringUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4;\\n\\nlibrary StringUtils {\\n    /**\\n     * @dev Returns the length of a given string\\n     *\\n     * @param s The string to measure the length of\\n     * @return The length of the input string\\n     */\\n    function strlen(string memory s) internal pure returns (uint256) {\\n        uint256 len;\\n        uint256 i = 0;\\n        uint256 bytelength = bytes(s).length;\\n        for (len = 0; i < bytelength; len++) {\\n            bytes1 b = bytes(s)[i];\\n            if (b < 0x80) {\\n                i += 1;\\n            } else if (b < 0xE0) {\\n                i += 2;\\n            } else if (b < 0xF0) {\\n                i += 3;\\n            } else if (b < 0xF8) {\\n                i += 4;\\n            } else if (b < 0xFC) {\\n                i += 5;\\n            } else {\\n                i += 6;\\n            }\\n        }\\n        return len;\\n    }\\n}\\n\",\"keccak256\":\"0xe17bcc269748774d98a8e9b1577a402c96e46fcb489c322f3b97dd2461b05a2c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162000d1238038062000d1283398101604081905262000034916200016e565b6200003f3362000108565b6001600160a01b038216608052805181906000906200006257620000626200025b565b6020026020010151600181905550806001815181106200008657620000866200025b565b602002602001015160028190555080600281518110620000aa57620000aa6200025b565b602002602001015160038190555080600381518110620000ce57620000ce6200025b565b602002602001015160048190555080600481518110620000f257620000f26200025b565b6020026020010151600581905550505062000271565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200018257600080fd5b82516001600160a01b03811681146200019a57600080fd5b602084810151919350906001600160401b0380821115620001ba57600080fd5b818601915086601f830112620001cf57600080fd5b815181811115620001e457620001e462000158565b8060051b604051601f19603f830116810181811085821117156200020c576200020c62000158565b6040529182528482019250838101850191898311156200022b57600080fd5b938501935b828510156200024b5784518452938501939285019262000230565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b608051610a7e620002946000396000818161021f01526107880152610a7e6000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80638da5cb5b116100b2578063cd5d2c7411610081578063e277859d11610066578063e277859d14610253578063e52bf5fc14610266578063f2fde38b1461027957600080fd5b8063cd5d2c7414610241578063d820ed421461024a57600080fd5b80638da5cb5b146101d9578063a200e153146101fe578063a34e359614610207578063c8a4271f1461021a57600080fd5b806359b6b86c116100ee57806359b6b86c146101a2578063715018a6146101ab5780637f857ae5146101b35780638912dc00146101c657600080fd5b806301ffc9a714610120578063158c23ba146101485780632c0fd74c1461015d57806350e9a71514610174575b600080fd5b61013361012e36600461089b565b61028c565b60405190151581526020015b60405180910390f35b61015b6101563660046108dd565b610325565b005b61016660015481565b60405190815260200161013f565b6101876101823660046108f6565b610332565b6040805182518152602092830151928101929092520161013f565b61016660055481565b61015b61046c565b61015b6101c13660046108dd565b610480565b61015b6101d43660046108dd565b61048d565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161013f565b61016660035481565b6101666102153660046108f6565b61049a565b6101e67f000000000000000000000000000000000000000000000000000000000000000081565b61016660025481565b61016660045481565b61015b6102613660046108dd565b6104eb565b61015b6102743660046108dd565b6104f8565b61015b610287366004610975565b610505565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000148061031f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f50e9a71500000000000000000000000000000000000000000000000000000000145b92915050565b61032d61059a565b600555565b6040805180820190915260008082526020820152600061038786868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105f492505050565b90506000600582106103a857836005546103a191906109b4565b90506103fb565b816004036103be57836004546103a191906109b4565b816003036103d457836003546103a191906109b4565b816002036103ea57836002546103a191906109b4565b836001546103f891906109b4565b90505b604051806040016040528061040f83610783565b815260200161045f61045a8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c92508b915061082a9050565b610783565b9052979650505050505050565b61047461059a565b61047e6000610833565b565b61048861059a565b600255565b61049561059a565b600155565b60006104e261045a86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525088925087915061082a9050565b95945050505050565b6104f361059a565b600455565b61050061059a565b600355565b61050d61059a565b6001600160a01b03811661058e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61059781610833565b50565b6000546001600160a01b0316331461047e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610585565b8051600090819081905b8082101561077a57600085838151811061061a5761061a6109cb565b01602001516001600160f81b03191690507f80000000000000000000000000000000000000000000000000000000000000008110156106655761065e6001846109e1565b9250610767565b7fe0000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156106a25761065e6002846109e1565b7ff0000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156106df5761065e6003846109e1565b7ff8000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216101561071c5761065e6004846109e1565b7ffc000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156107595761065e6005846109e1565b6107646006846109e1565b92505b5082610772816109f4565b9350506105fe565b50909392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108089190610a0d565b905080610819846305f5e1006109b4565b6108239190610a26565b9392505050565b60009392505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156108ad57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461082357600080fd5b6000602082840312156108ef57600080fd5b5035919050565b6000806000806060858703121561090c57600080fd5b843567ffffffffffffffff8082111561092457600080fd5b818701915087601f83011261093857600080fd5b81358181111561094757600080fd5b88602082850101111561095957600080fd5b6020928301999098509187013596604001359550909350505050565b60006020828403121561098757600080fd5b81356001600160a01b038116811461082357600080fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761031f5761031f61099e565b634e487b7160e01b600052603260045260246000fd5b8082018082111561031f5761031f61099e565b600060018201610a0657610a0661099e565b5060010190565b600060208284031215610a1f57600080fd5b5051919050565b600082610a4357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a43be335b10595d4c5285cd66a175b340525b3203f4942713eaa7922fbe3cf8164736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061011b5760003560e01c80638da5cb5b116100b2578063cd5d2c7411610081578063e277859d11610066578063e277859d14610253578063e52bf5fc14610266578063f2fde38b1461027957600080fd5b8063cd5d2c7414610241578063d820ed421461024a57600080fd5b80638da5cb5b146101d9578063a200e153146101fe578063a34e359614610207578063c8a4271f1461021a57600080fd5b806359b6b86c116100ee57806359b6b86c146101a2578063715018a6146101ab5780637f857ae5146101b35780638912dc00146101c657600080fd5b806301ffc9a714610120578063158c23ba146101485780632c0fd74c1461015d57806350e9a71514610174575b600080fd5b61013361012e36600461089b565b61028c565b60405190151581526020015b60405180910390f35b61015b6101563660046108dd565b610325565b005b61016660015481565b60405190815260200161013f565b6101876101823660046108f6565b610332565b6040805182518152602092830151928101929092520161013f565b61016660055481565b61015b61046c565b61015b6101c13660046108dd565b610480565b61015b6101d43660046108dd565b61048d565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161013f565b61016660035481565b6101666102153660046108f6565b61049a565b6101e67f000000000000000000000000000000000000000000000000000000000000000081565b61016660025481565b61016660045481565b61015b6102613660046108dd565b6104eb565b61015b6102743660046108dd565b6104f8565b61015b610287366004610975565b610505565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000148061031f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f50e9a71500000000000000000000000000000000000000000000000000000000145b92915050565b61032d61059a565b600555565b6040805180820190915260008082526020820152600061038786868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105f492505050565b90506000600582106103a857836005546103a191906109b4565b90506103fb565b816004036103be57836004546103a191906109b4565b816003036103d457836003546103a191906109b4565b816002036103ea57836002546103a191906109b4565b836001546103f891906109b4565b90505b604051806040016040528061040f83610783565b815260200161045f61045a8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c92508b915061082a9050565b610783565b9052979650505050505050565b61047461059a565b61047e6000610833565b565b61048861059a565b600255565b61049561059a565b600155565b60006104e261045a86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525088925087915061082a9050565b95945050505050565b6104f361059a565b600455565b61050061059a565b600355565b61050d61059a565b6001600160a01b03811661058e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61059781610833565b50565b6000546001600160a01b0316331461047e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610585565b8051600090819081905b8082101561077a57600085838151811061061a5761061a6109cb565b01602001516001600160f81b03191690507f80000000000000000000000000000000000000000000000000000000000000008110156106655761065e6001846109e1565b9250610767565b7fe0000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156106a25761065e6002846109e1565b7ff0000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156106df5761065e6003846109e1565b7ff8000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216101561071c5761065e6004846109e1565b7ffc000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156107595761065e6005846109e1565b6107646006846109e1565b92505b5082610772816109f4565b9350506105fe565b50909392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108089190610a0d565b905080610819846305f5e1006109b4565b6108239190610a26565b9392505050565b60009392505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156108ad57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461082357600080fd5b6000602082840312156108ef57600080fd5b5035919050565b6000806000806060858703121561090c57600080fd5b843567ffffffffffffffff8082111561092457600080fd5b818701915087601f83011261093857600080fd5b81358181111561094757600080fd5b88602082850101111561095957600080fd5b6020928301999098509187013596604001359550909350505050565b60006020828403121561098757600080fd5b81356001600160a01b038116811461082357600080fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761031f5761031f61099e565b634e487b7160e01b600052603260045260246000fd5b8082018082111561031f5761031f61099e565b600060018201610a0657610a0661099e565b5060010190565b600060208284031215610a1f57600080fd5b5051919050565b600082610a4357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a43be335b10595d4c5285cd66a175b340525b3203f4942713eaa7922fbe3cf8164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "premium(string,uint256,uint256)": {
        "details": "Returns the pricing premium in wei."
      },
      "price(string,uint256,uint256)": {
        "details": "Returns the price to register or renew a name.",
        "params": {
          "duration": "How long the name is being registered or extended for, in seconds.",
          "expires": "When the name presently expires (0 if this is a new registration).",
          "name": "The name being registered or renewed."
        },
        "returns": {
          "_0": "base premium tuple of base price + premium price"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "src/iotxregistrar/StablePriceOracle.sol:StablePriceOracle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1073,
        "contract": "src/iotxregistrar/StablePriceOracle.sol:StablePriceOracle",
        "label": "price1Letter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1075,
        "contract": "src/iotxregistrar/StablePriceOracle.sol:StablePriceOracle",
        "label": "price2Letter",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1077,
        "contract": "src/iotxregistrar/StablePriceOracle.sol:StablePriceOracle",
        "label": "price3Letter",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1079,
        "contract": "src/iotxregistrar/StablePriceOracle.sol:StablePriceOracle",
        "label": "price4Letter",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1081,
        "contract": "src/iotxregistrar/StablePriceOracle.sol:StablePriceOracle",
        "label": "price5Letter",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
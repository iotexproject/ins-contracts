/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StablePriceOracle,
  StablePriceOracleInterface,
} from "../../../../src/iotxregistrar/StablePriceOracle.sol/StablePriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract AggregatorInterface",
        name: "_usdOracle",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_rentPrices",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
    ],
    name: "RentPriceChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "premium",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "price",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "base",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceOracle.Price",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1Letter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price2Letter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price3Letter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price4Letter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price5Letter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice1Letter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice2Letter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice3Letter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice4Letter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice5Letter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdOracle",
    outputs: [
      {
        internalType: "contract AggregatorInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000d1238038062000d1283398101604081905262000034916200016e565b6200003f3362000108565b6001600160a01b038216608052805181906000906200006257620000626200025b565b6020026020010151600181905550806001815181106200008657620000866200025b565b602002602001015160028190555080600281518110620000aa57620000aa6200025b565b602002602001015160038190555080600381518110620000ce57620000ce6200025b565b602002602001015160048190555080600481518110620000f257620000f26200025b565b6020026020010151600581905550505062000271565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200018257600080fd5b82516001600160a01b03811681146200019a57600080fd5b602084810151919350906001600160401b0380821115620001ba57600080fd5b818601915086601f830112620001cf57600080fd5b815181811115620001e457620001e462000158565b8060051b604051601f19603f830116810181811085821117156200020c576200020c62000158565b6040529182528482019250838101850191898311156200022b57600080fd5b938501935b828510156200024b5784518452938501939285019262000230565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b608051610a7e620002946000396000818161021f01526107880152610a7e6000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80638da5cb5b116100b2578063cd5d2c7411610081578063e277859d11610066578063e277859d14610253578063e52bf5fc14610266578063f2fde38b1461027957600080fd5b8063cd5d2c7414610241578063d820ed421461024a57600080fd5b80638da5cb5b146101d9578063a200e153146101fe578063a34e359614610207578063c8a4271f1461021a57600080fd5b806359b6b86c116100ee57806359b6b86c146101a2578063715018a6146101ab5780637f857ae5146101b35780638912dc00146101c657600080fd5b806301ffc9a714610120578063158c23ba146101485780632c0fd74c1461015d57806350e9a71514610174575b600080fd5b61013361012e36600461089b565b61028c565b60405190151581526020015b60405180910390f35b61015b6101563660046108dd565b610325565b005b61016660015481565b60405190815260200161013f565b6101876101823660046108f6565b610332565b6040805182518152602092830151928101929092520161013f565b61016660055481565b61015b61046c565b61015b6101c13660046108dd565b610480565b61015b6101d43660046108dd565b61048d565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161013f565b61016660035481565b6101666102153660046108f6565b61049a565b6101e67f000000000000000000000000000000000000000000000000000000000000000081565b61016660025481565b61016660045481565b61015b6102613660046108dd565b6104eb565b61015b6102743660046108dd565b6104f8565b61015b610287366004610975565b610505565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000148061031f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f50e9a71500000000000000000000000000000000000000000000000000000000145b92915050565b61032d61059a565b600555565b6040805180820190915260008082526020820152600061038786868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105f492505050565b90506000600582106103a857836005546103a191906109b4565b90506103fb565b816004036103be57836004546103a191906109b4565b816003036103d457836003546103a191906109b4565b816002036103ea57836002546103a191906109b4565b836001546103f891906109b4565b90505b604051806040016040528061040f83610783565b815260200161045f61045a8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c92508b915061082a9050565b610783565b9052979650505050505050565b61047461059a565b61047e6000610833565b565b61048861059a565b600255565b61049561059a565b600155565b60006104e261045a86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525088925087915061082a9050565b95945050505050565b6104f361059a565b600455565b61050061059a565b600355565b61050d61059a565b6001600160a01b03811661058e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61059781610833565b50565b6000546001600160a01b0316331461047e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610585565b8051600090819081905b8082101561077a57600085838151811061061a5761061a6109cb565b01602001516001600160f81b03191690507f80000000000000000000000000000000000000000000000000000000000000008110156106655761065e6001846109e1565b9250610767565b7fe0000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156106a25761065e6002846109e1565b7ff0000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156106df5761065e6003846109e1565b7ff8000000000000000000000000000000000000000000000000000000000000006001600160f81b03198216101561071c5761065e6004846109e1565b7ffc000000000000000000000000000000000000000000000000000000000000006001600160f81b0319821610156107595761065e6005846109e1565b6107646006846109e1565b92505b5082610772816109f4565b9350506105fe565b50909392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108089190610a0d565b905080610819846305f5e1006109b4565b6108239190610a26565b9392505050565b60009392505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156108ad57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461082357600080fd5b6000602082840312156108ef57600080fd5b5035919050565b6000806000806060858703121561090c57600080fd5b843567ffffffffffffffff8082111561092457600080fd5b818701915087601f83011261093857600080fd5b81358181111561094757600080fd5b88602082850101111561095957600080fd5b6020928301999098509187013596604001359550909350505050565b60006020828403121561098757600080fd5b81356001600160a01b038116811461082357600080fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761031f5761031f61099e565b634e487b7160e01b600052603260045260246000fd5b8082018082111561031f5761031f61099e565b600060018201610a0657610a0661099e565b5060010190565b600060208284031215610a1f57600080fd5b5051919050565b600082610a4357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a43be335b10595d4c5285cd66a175b340525b3203f4942713eaa7922fbe3cf8164736f6c63430008110033";

type StablePriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StablePriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StablePriceOracle__factory extends ContractFactory {
  constructor(...args: StablePriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _usdOracle: PromiseOrValue<string>,
    _rentPrices: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StablePriceOracle> {
    return super.deploy(
      _usdOracle,
      _rentPrices,
      overrides || {}
    ) as Promise<StablePriceOracle>;
  }
  override getDeployTransaction(
    _usdOracle: PromiseOrValue<string>,
    _rentPrices: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_usdOracle, _rentPrices, overrides || {});
  }
  override attach(address: string): StablePriceOracle {
    return super.attach(address) as StablePriceOracle;
  }
  override connect(signer: Signer): StablePriceOracle__factory {
    return super.connect(signer) as StablePriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StablePriceOracleInterface {
    return new utils.Interface(_abi) as StablePriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StablePriceOracle {
    return new Contract(address, _abi, signerOrProvider) as StablePriceOracle;
  }
}
